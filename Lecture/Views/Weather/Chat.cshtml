
<script src="~/lib/signalr/signalr.js"></script>

<div class="container">

    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-2">Target Id</div>
        <div class="col-4"><input type="text" id="tagetIdInput" /></div>
    </div>

    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-2">User</div>
        <div class="col-4"><input type="text" id="userInput" /></div>
    </div>
    <div class="row">
        <div class="col-2">Message</div>
        <div class="col-4"><input type="text" id="messageInput" /></div>
    </div>
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-6">
        <ul id="messagesList"></ul>
    </div>
</div>

<script>

    var connection = new signalR.HubConnectionBuilder()
    .withUrl("/chatHub")
    .withAutomaticReconnect()   // 자동으로 다시 연결 // https://docs.microsoft.com/ko-kr/aspnet/core/signalr/javascript-client?view=aspnetcore-6.0&tabs=visual-studio
    .build();

    //Disable the send button until connection is established.
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message) {
        var li = document.createElement("li");
        document.getElementById("messagesList").appendChild(li);
        // We can assign user-supplied strings to an element's textContent because it
        // is not interpreted as markup. If you're assigning in any other way, you
        // should be aware of possible script injection concerns.
        li.textContent = `${user} --> ${message}`;
    });

    connection.onreconnecting(error => {
        alert("ab");

        console.assert(connection.state === signalR.HubConnectionState.Reconnecting);

        //document.getElementById("sendButton").disabled = true;

        const li = document.createElement("li");
        li.textContent = `Connection lost due to error "${error}". Reconnecting.`;
        document.getElementById("messageList").appendChild(li);
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {

        var targetId =document.getElementById("tagetIdInput").value;
        var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;

        connection.invoke("SendMessage", user, message, targetId).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });
</script>
